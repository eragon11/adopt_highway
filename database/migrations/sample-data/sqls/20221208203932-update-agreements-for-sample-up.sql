/*
Update our existing agreements to provide actual scheduled pickup date values
*/

UPDATE ps
SET 
SCHEDULED_PICKUP_YEAR_MONTH = CAST(MONTH(DATEADD(yy, 3, CONVERT(datetime, ('1/' + ps.SCHEDULED_PICKUP_YEAR_MONTH), 103))) AS VARCHAR(2)) + '/' + CAST(YEAR(DATEADD(yy, 3, CONVERT(datetime, ('1/' + ps.SCHEDULED_PICKUP_YEAR_MONTH), 103))) AS VARCHAR(50))
, SCHEDULED_PICKUP_DATE = DATEADD(yy, 3, CONVERT(datetime, ('1/' + ps.SCHEDULED_PICKUP_YEAR_MONTH), 103))
FROM 
AGREEMENT a
INNER JOIN PICKUP p ON a.AGREEMENT_ID = p.AGREEMENT_ID
INNER JOIN PICKUP_SCHEDULE ps on a.AGREEMENT_ID = ps.AGREEMENT_ID
INNER JOIN gis.AAH_GIS_SEGMENTS s on a.AAH_SEGMENT_GLOBAL_ID = s.GlobalID
WHERE
a.STATUS = 'Active' and s.DIST_NBR = 14

-- update segment length
UPDATE t1
SET 
LENGTH_OF_ADOPTED_SECTION = s1.SEGMENT_LENGTH_MILES
, CLEANING_CYCLE_OF_ADOPTED_SECTION = 3
FROM APPLICATIONS t1 
INNER JOIN gis.AAH_GIS_SEGMENTS s1 ON t1.AAH_SEGMENT_ID = s1.AAH_SEGMENT_ID


DECLARE @Applications TABLE (
    APPLICATION_TOKEN UNIQUEIDENTIFIER NOT NULL,
    DOCUMENT_ID UNIQUEIDENTIFIER NULL
);

-- Catholic Ro Fraternity is on DocuSign and on DEV. 
INSERT INTO @Applications 
VALUES('C8AC52FB-743F-40EA-A168-DBEAC12C6D25','81e07dc6-3300-4cf9-8fe3-36b8d6e732fa');

DECLARE @GROUP_ID INT, @ORG_ID INT, @applicationToken VARCHAR(36), @documentId VARCHAR(36);

DECLARE cursor_documents CURSOR FOR
  SELECT DISTINCT t1.APPLICATION_TOKEN
  FROM @Applications t1
  LEFT JOIN AGREEMENT t2 ON t1.APPLICATION_TOKEN = t2.APPLICATION_TOKEN
  WHERE t2.APPLICATION_TOKEN IS NULL;

-- open cursor
OPEN cursor_documents;

-- loop through a cursor
FETCH NEXT FROM cursor_documents INTO @applicationToken;
WHILE @@FETCH_STATUS = 0
    BEGIN
        INSERT INTO ORGANIZATION (Type) VALUES('GROUP');
        SET @ORG_ID = SCOPE_IDENTITY();

        INSERT INTO GROUP_SPONSOR (NAME, ORGANIZATION_ID, TYPE, ESTIMATED_VOLUNTEER_COUNT, APPLICATION_SEND_DATE, INITIAL_CONTACT_DATE, COMMENT, COUNTY_ID)
        SELECT [GROUP_NAME], @ORG_ID, 'Business', t1.ESTIMATE_NUMBER_OF_VOLUNTEERS, t1.CREATED_ON, t1.CREATED_ON, 'Sample data', t1.REQUESTED_HIGHWAY_COUNTY_NUMBER
        FROM APPLICATIONS t1 WHERE APPLICATION_TOKEN = @applicationToken;
        SET @GROUP_ID = SCOPE_IDENTITY();

        INSERT INTO AGREEMENT (GROUP_ID, [STATUS], APPLICATION_TOKEN, BEGIN_DATE, END_DATE)
        VALUES(@GROUP_ID, 'Pending', @applicationToken, getdate(), getdate());

        DELETE FROM APPLICATIONS WHERE APPLICATION_TOKEN = @applicationToken;

        FETCH NEXT FROM cursor_documents INTO @applicationToken;
    END;

CLOSE cursor_documents;

INSERT INTO DOCUMENT (STATUS, SENT_DATE, APPLICATION_TOKEN, TEMPLATE_NAME, AGREEMENT_ID)
SELECT DISTINCT 
'signed', GETDATE(), t1.APPLICATION_TOKEN, t1.DOCUMENT_ID, t2.AGREEMENT_ID
FROM @Applications t1
INNER JOIN AGREEMENT t2 ON T1.APPLICATION_TOKEN = t2.APPLICATION_TOKEN
LEFT JOIN DOCUMENT t3 ON T1.APPLICATION_TOKEN = t3.APPLICATION_TOKEN
WHERE t3.DOCUMENT_ID IS NULL;


