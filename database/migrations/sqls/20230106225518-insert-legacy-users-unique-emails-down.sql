CREATE OR ALTER
  PROCEDURE [aah].[aah_insert_missing_users] AS BEGIN;
SET NOCOUNT ON;

-- common strings
DECLARE 
@generic_comment NVARCHAR(50) = 'Imported from prior system',
@primary NVARCHAR(50) = 'Primary',
@alternate1 NVARCHAR(50) = 'Alternate 1',
@alternate2 NVARCHAR(50) = 'Alternate 2',
@volunteer NVARCHAR(50) = 'Volunteer';

-- insert volunteers
DECLARE @user_person TABLE (
        [USERNAME] NVARCHAR(255) NULL,
        [AAH_GRP_ID] INT NULL,
		[ORGANIZATION_ID] int NULL,
        [PREFIX] NVARCHAR(255) NULL,
        [FIRST_NAME] NVARCHAR(255) NULL,
        [MIDDLE_NAME] NVARCHAR(255) NULL,
        [LAST_NAME] NVARCHAR(255) NULL,
        [SUFFIX] NVARCHAR(255) NULL,
        [TITLE] NVARCHAR(255) NULL,
        [PREFERRED_NAME] NVARCHAR(255) NULL,
		[EMAIL] NVARCHAR(255) NULL,
		[MAILING_ADDRESS_LINE1] NVARCHAR(255) NULL,
		[MAILING_ADDRESS_LINE2] NVARCHAR(255) NULL,
		[MAILING_CITY] NVARCHAR(255) NULL,
		[MAILING_STATE] NVARCHAR(255) NULL,
		[MAILING_ZIPCD] NVARCHAR(255) NULL,
		[PHYSICAL_ADDRESS_LINE1] NVARCHAR(255) NULL,
		[PHYSICAL_ADDRESS_LINE2] NVARCHAR(255) NULL,
		[PHYSICAL_CITY] NVARCHAR(255) NULL,
		[PHYSICAL_STATE] NVARCHAR(255) NULL,
		[PHYSICAL_ZIPCD] NVARCHAR(255) NULL,
		[PRIMARY_PHONE] NVARCHAR(255) NULL,
		[PRIMARY_PHONE_COMMENT] NVARCHAR(255) NULL,
		[SECOND_PHONE] NVARCHAR(255) NULL,
		[SECOND_PHONE_COMMENT] NVARCHAR(255) NULL,
		[THIRD_PHONE] NVARCHAR(255) NULL,
		[THIRD_PHONE_COMMENT] NVARCHAR(255) NULL
    );
INSERT INTO @user_person (
		[USERNAME],
        [AAH_GRP_ID],
        [PREFIX],
        [FIRST_NAME],
        [MIDDLE_NAME],
        [LAST_NAME],
        [SUFFIX],
        [TITLE],
        [PREFERRED_NAME],
		[EMAIL],
		[MAILING_ADDRESS_LINE1],
		[MAILING_ADDRESS_LINE2],
		[MAILING_CITY] ,
		[MAILING_STATE],
		[MAILING_ZIPCD],
		[PHYSICAL_ADDRESS_LINE1],
		[PHYSICAL_ADDRESS_LINE2],
		[PHYSICAL_CITY],
		[PHYSICAL_STATE],
		[PHYSICAL_ZIPCD], 
		[PRIMARY_PHONE],
		[PRIMARY_PHONE_COMMENT],
		[SECOND_PHONE],
		[SECOND_PHONE_COMMENT],
		[THIRD_PHONE],
		[THIRD_PHONE_COMMENT]
    )
SELECT DISTINCT
	t1.[AAH_CNTCT_ID],
	t3.AAH_GRP_ID,
    [CNTCT_PRFX_NM],
    [CNTCT_FRST_NM],
    [CNTCT_MIDL_NM],
    [CNTCT_LAST_NM],
    replace([CNTCT_SFX_NM], '0', ''),
    [CNTCT_CRDNTL_NM],
    [CNTCT_PRFR_NM],
	[CNTCT_EML_ADDR],
	[CNTCT_ML_ADDR1],
	[CNTCT_ML_ADDR2],
	[CNTCT_ML_CITY_NM],
	[CNTCT_ML_STATE_ABRVN_NM],
	[CNTCT_ML_ZIPCD],
	[CNTCT_PHYS_ADDR1],
	[CNTCT_PHYS_ADDR2],
	[CNTCT_PHYS_CITY_NM],
	[CNTCT_PHYS_STATE_ABRVN_NM],
	[CNTCT_PHYS_ZIPCD],
	CONCAT( t1.CNTCT_DAYTM_AREA_CD,  t1.CNTCT_ALT1_PHN_NBR, (CASE WHEN COALESCE(t1.CNTCT_DAYTM_EXT_NBR, '') <> '' THEN CONCAT(' x ', t1.CNTCT_DAYTM_EXT_NBR) ELSE '' END)),
	t1.CNTCT_DAYTM_PHN_CMNT,
	CONCAT( t1.CNTCT_ALT1_AREA_CD,  t1.CNTCT_ALT1_PHN_NBR, (CASE WHEN COALESCE(t1.CNTCT_ALT1_EXT_NBR, '') <> '' THEN CONCAT(' x ', t1.CNTCT_ALT1_EXT_NBR) ELSE '' END)),
	t1.CNTCT_ALT1_PHN_CMNT,
	CONCAT( t1.CNTCT_ALT2_AREA_CD,  t1.CNTCT_ALT2_PHN_NBR, (CASE WHEN COALESCE(t1.CNTCT_ALT2_EXT_NBR, '') <> '' THEN CONCAT(' x ', t1.CNTCT_ALT2_EXT_NBR) ELSE '' END)),
	t1.CNTCT_ALT2_PHN_CMNT
FROM aah_legacy..aah_cntct t1
	INNER JOIN aah_legacy..AAH_GRP_CNTCT t3 ON t1.AAH_CNTCT_ID = t3.AAH_CNTCT_ID
	LEFT JOIN USER_PERSON t2 ON t1.AAH_CNTCT_ID = t2.USER_ID	
WHERE t2.USER_ID IS NULL;

UPDATE @user_person
SET PREFIX = ''
WHERE PREFIX = '0';

-- update the group's organization
UPDATE t1 
SET ORGANIZATION_ID = gs.ORGANIZATION_ID
FROM @user_person t1
INNER JOIN GROUP_SPONSOR gs on t1.AAH_GRP_ID = gs.GROUP_ID

-- insert user records
INSERT INTO USER_PERSON (
        [USERNAME],
        [PREFIX],
        [FIRST_NAME],
        [MIDDLE_NAME],
        [LAST_NAME],
        [SUFFIX],
        [TITLE],
        [PREFERRED_NAME]
    )
SELECT t1.[USERNAME],
    t1.[PREFIX],
    t1.[FIRST_NAME],
    t1.[MIDDLE_NAME],
    t1.[LAST_NAME],
    t1.[SUFFIX],
    t1.[TITLE],
    t1.[PREFERRED_NAME]
FROM @user_person t1
    LEFT JOIN USER_PERSON t2 on t1.USERNAME = t2.USERNAME
WHERE t2.USER_ID IS NULL;

-- create roles for our users
INSERT INTO ROLE (ORGANIZATION_ID, USER_ID, TYPE, START_DATE)
SELECT t2.ORGANIZATION_ID,
    t1.USER_ID,
    @volunteer,
    GETDATE()
FROM @user_person t2
    INNER JOIN USER_PERSON t1 ON t1.USERNAME = t2.USERNAME
	LEFT JOIN ROLE t3 on t1.USER_ID = t3.USER_ID AND @volunteer = t3.TYPE
WHERE t3.ROLE_ID IS NULL AND t2.ORGANIZATION_ID IS NOT NULL;

-- create emails
INSERT INTO [EMAIL] ([USER_ID], [TYPE], [VALUE], [COMMENT])
SELECT DISTINCT u.[USER_ID], @primary, t1.[EMAIL], @generic_comment
FROM @user_person  t1
INNER JOIN [USER_PERSON] u ON u.[USERNAME] = t1.[EMAIL]

-- insert mailing addresses
INSERT INTO ADDRESS (USER_ID, ADDRESS_LINE1, ADDRESS_LINE2, CITY, STATE, POSTAL_CODE, TYPE, COMMENT, PRIMARY_CONTACT)
SELECT DISTINCT t2.USER_ID, t1.MAILING_ADDRESS_LINE1, t1.MAILING_ADDRESS_LINE2, t1.MAILING_CITY, t1.MAILING_STATE, t1.MAILING_ZIPCD, 'Mailing', @generic_comment, 'Y'
FROM @user_person t1
INNER JOIN USER_PERSON t2 ON t1.USERNAME = t2.USERNAME
LEFT JOIN ADDRESS t3 ON 
	t3.USER_ID = t2.USER_ID 
	AND t3.ADDRESS_LINE1 = t1.MAILING_ADDRESS_LINE1
	AND t3.ADDRESS_LINE2 = t1.MAILING_ADDRESS_LINE2
	AND t3.CITY = t1.MAILING_CITY
	AND t3.STATE = t1.MAILING_STATE
	AND t3.POSTAL_CODE = t1.MAILING_ZIPCD
WHERE 
t3.ADDRESS_ID IS NULL
AND (COALESCE(t1.MAILING_ADDRESS_LINE1, '') <> ''
OR COALESCE(t1.MAILING_ADDRESS_LINE2, '') <> ''
OR COALESCE(t1.MAILING_CITY, '') <> ''
OR COALESCE(t1.MAILING_ZIPCD, '') <> '');

-- insert physical addresses
INSERT INTO ADDRESS (USER_ID, ADDRESS_LINE1, ADDRESS_LINE2, CITY, STATE, POSTAL_CODE, TYPE, COMMENT, PRIMARY_CONTACT)
SELECT DISTINCT t2.USER_ID, t1.PHYSICAL_ADDRESS_LINE1, t1.PHYSICAL_ADDRESS_LINE2, t1.PHYSICAL_CITY, t1.PHYSICAL_STATE, t1.PHYSICAL_ZIPCD, 'Physical', @generic_comment, 'Y'
FROM @user_person t1
INNER JOIN USER_PERSON t2 ON t1.USERNAME = t2.USERNAME
LEFT JOIN ADDRESS t3 ON 
	t3.USER_ID = t2.USER_ID 
	AND t3.ADDRESS_LINE1 = t1.PHYSICAL_ADDRESS_LINE1
	AND t3.ADDRESS_LINE2 = t1.PHYSICAL_ADDRESS_LINE2
	AND t3.CITY = t1.PHYSICAL_CITY
	AND t3.STATE = t1.PHYSICAL_STATE
	AND t3.POSTAL_CODE = t1.PHYSICAL_ZIPCD
WHERE 
t3.ADDRESS_ID IS NULL
AND (COALESCE(t1.PHYSICAL_ADDRESS_LINE1, '') <> ''
OR COALESCE(t1.PHYSICAL_ADDRESS_LINE2, '') <> ''
OR COALESCE(t1.PHYSICAL_CITY, '') <> ''
OR COALESCE(t1.PHYSICAL_ZIPCD, '') <> '');

-- insert into emails
INSERT INTO [aah].[EMAIL]
           ([USER_ID]
           ,[TYPE]
           ,[VALUE]
           ,[COMMENT])
SELECT DISTINCT
t2.USER_ID, @primary, t1.EMAIL, @generic_comment
FROM @user_person t1
INNER JOIN USER_PERSON t2 on t1.USERNAME = t2.USERNAME
LEFT JOIN EMAIL t3 ON t3.USER_ID = t2.USER_ID AND t3.TYPE = @primary AND t3.VALUE = t1.EMAIL
WHERE t3.EMAIL_ID IS NULL AND COALESCE(t1.EMAIL,'') <> '';

-- insert primary into phones
INSERT INTO [aah].[PHONE]
           ([USER_ID]
           ,[TYPE]
           ,[VALUE]
           ,[COMMENT])
SELECT DISTINCT
t2.USER_ID, @primary, t1.PRIMARY_PHONE, t1.PRIMARY_PHONE_COMMENT
FROM @user_person t1
INNER JOIN USER_PERSON t2 on t1.USERNAME = t2.USERNAME
LEFT JOIN PHONE t3 ON t3.USER_ID = t2.USER_ID AND t3.TYPE = @primary AND t3.VALUE = t1.PRIMARY_PHONE
WHERE t3.PHONE_ID IS NULL AND COALESCE(t1.PRIMARY_PHONE,'') <> '';

-- first alternate
INSERT INTO [aah].[PHONE]
           ([USER_ID]
           ,[TYPE]
           ,[VALUE]
           ,[COMMENT])
SELECT DISTINCT
t2.USER_ID, @alternate1 , t1.SECOND_PHONE, t1.SECOND_PHONE_COMMENT
FROM @user_person t1
INNER JOIN USER_PERSON t2 on t1.USERNAME = t2.USERNAME
LEFT JOIN PHONE t3 ON t3.USER_ID = t2.USER_ID AND t3.TYPE = @alternate1  AND t3.VALUE = t1.SECOND_PHONE
WHERE t3.PHONE_ID IS NULL AND COALESCE(t1.SECOND_PHONE,'') <> '';

-- second alternate
INSERT INTO [aah].[PHONE]
           ([USER_ID]
           ,[TYPE]
           ,[VALUE]
           ,[COMMENT])
SELECT DISTINCT
t2.USER_ID, @alternate2 , t1.THIRD_PHONE, t1.THIRD_PHONE_COMMENT
FROM @user_person t1
INNER JOIN USER_PERSON t2 on t1.USERNAME = t2.USERNAME
LEFT JOIN PHONE t3 ON t3.USER_ID = t2.USER_ID AND t3.TYPE = @alternate2  AND t3.VALUE = t1.THIRD_PHONE
WHERE t3.PHONE_ID IS NULL AND COALESCE(t1.THIRD_PHONE,'') <> '';

-- create contact records
INSERT INTO GROUP_CONTACTS ([GROUP_ID], [USER_ID], [IS_PRIMARY_CONTACT])
SELECT gs.[GROUP_ID], t3.[USER_ID], (CASE t2.AAH_CNTCT_TYPE_NM WHEN @primary THEN 1 ELSE 0 END)
FROM @user_person t1
INNER JOIN GROUP_SPONSOR gs on t1.AAH_GRP_ID = gs.GROUP_ID
INNER JOIN aah_legacy.dbo.AAH_GRP_CNTCT t2 ON t1.USERNAME = t2.AAH_CNTCT_ID
INNER JOIN USER_PERSON t3 on t1.USERNAME = t3.USERNAME
LEFT JOIN GROUP_CONTACTS t4 ON t4.[GROUP_ID] = gs.GROUP_ID AND t4.[USER_ID] = t3.[USER_ID]
WHERE t4.GROUP_ID IS NULL;

SET NOCOUNT OFF;
END;
;
GO
